apiVersion: v1
kind: ConfigMap
metadata:
  name: mqtt-mapper-config
  namespace: kubeedge
data:
  config.yaml: |
    grpc_server:
      socket_path: /etc/kubeedge/mqtt.sock
    common:
      name: Mqtt-mapper
      version: v1.13.0
      api_version: v1.0.0
      protocol: mqtt
      address: 192.168.1.54
      edgecore_sock: /etc/kubeedge/dmi.sock
      http_port: ""
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: mqtt-mapper
  namespace: kubeedge
spec:
  selector:
    matchLabels:
      app: mqtt-mapper
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
      labels:
        app: mqtt-mapper
    spec:
      nodeSelector:
        node-role.kubernetes.io/edge: ""
      hostNetwork: true
      restartPolicy: Always
      containers:
      - name: mqtt-mapper
        image: vxav/mqttmapper:0.5-arm64
        imagePullPolicy: IfNotPresent
        command: ["./main"]
        args: ["--config-file", "/config/config.yaml", "--v", "2"]
        resources:
          limits:
            cpu: 300m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: kubeedge-socket
          mountPath: /etc/kubeedge
          readOnly: false
        - name: config
          mountPath: /config
          readOnly: true
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumes:
      - name: kubeedge-socket
        hostPath:
          path: /etc/kubeedge
          type: Directory
      - name: config
        configMap:
          name: mqtt-mapper-config
